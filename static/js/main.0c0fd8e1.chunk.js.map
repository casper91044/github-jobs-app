{"version":3,"sources":["useFetchJobs.js","Job.js","JobsPagination.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","classNae","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAGMA,EACY,eADZA,EAEQ,WAFRA,EAGK,QAHLA,EAIoB,uBAGpBC,EAAW,6EAGjB,SAASC,EAAQC,EAAOC,GACpB,OAAQA,EAAOC,MACX,KAAKL,EACD,MAAO,CAACM,SAAS,EAAMC,KAAM,IACjC,KAAKP,EACD,OAAO,2BAAIG,GAAX,IAAkBG,SAAS,EAAOC,KAAMH,EAAOI,QAAQD,OAC3D,KAAKP,EACD,OAAO,2BAAIG,GAAX,IAAkBG,SAAS,EAAOG,MAAOL,EAAOI,QAAQC,MAAOF,KAAM,KACzE,KAAKP,EACD,OAAO,2BAAIG,GAAX,IAAkBO,YAAaN,EAAOI,QAAQE,cAClD,QACI,OAAOP,G,kECpBJ,SAASQ,EAAT,GAAqB,IAAPC,EAAM,EAANA,IAAM,EACPC,oBAAS,GADF,mBACxBC,EADwB,KAClBC,EADkB,KAG/B,OACI,kBAACC,EAAA,EAAD,CAAMC,UAAU,QACZ,kBAACD,EAAA,EAAKE,KAAN,KACI,yBAAKD,UAAU,kCACX,6BACI,kBAACD,EAAA,EAAKG,MAAN,KACKP,EAAIQ,MADT,MACkB,0BAAMH,UAAU,kCACVL,EAAIS,UAE5B,kBAACL,EAAA,EAAKM,SAAN,CAAeL,UAAU,mBACpB,IAAIM,KAAKX,EAAIY,YAAYC,sBAE9B,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAYV,UAAU,QAAQL,EAAIP,MACjD,kBAACqB,EAAA,EAAD,CAAOC,QAAQ,aAAaf,EAAIgB,UAChC,yBAAKC,MAAO,CAACC,UAAW,cACpB,kBAAC,IAAD,CAAeC,OAAQnB,EAAIoB,iBAGnC,yBAAKf,UAAU,oBAAoBgB,OAAO,KACrCC,IAAKtB,EAAIS,QAASc,IAAKvB,EAAIwB,gBAEpC,kBAACpB,EAAA,EAAKqB,KAAN,KACI,kBAACC,EAAA,EAAD,CAAQX,QAAQ,UACRY,QAAS,kBAAMxB,GAAQ,SAAAyB,GAAQ,OAAKA,OAClC1B,EAAO,eAAiB,iBAGtC,kBAAC2B,EAAA,EAAD,CAAUC,GAAI5B,GACV,yBAAKG,UAAU,QACX,kBAAC,IAAD,CAAec,OAAQnB,EAAI+B,kB,aCjCpC,SAASC,EAAT,GAAuD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASpC,EAAc,EAAdA,YACnD,SAASqC,EAAWC,GAChBF,GAAQ,SAAAG,GAAQ,OAAIA,EAAWD,KAEnC,OACI,kBAACE,EAAA,EAAD,KACc,IAATL,GAAc,kBAACK,EAAA,EAAWC,KAAZ,CAAiBZ,QAAS,kBAAMQ,GAAY,MAEjD,IAATF,GAAc,kBAACK,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMO,EAAQ,KAAxC,KAIdD,EAAO,GAAK,kBAACK,EAAA,EAAWG,SAAZ,MAEZR,EAAO,GAAK,kBAACK,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMQ,GAAY,KACpDF,EAAO,GAGZ,kBAACK,EAAA,EAAWE,KAAZ,CAAiBE,QAAM,GAAET,GAExBnC,GAAe,kBAACwC,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMQ,EAAW,KACtDF,EAAO,GAGXnC,GAAe,kBAACwC,EAAA,EAAWK,KAAZ,CAAiBhB,QAAS,kBAAMQ,EAAW,O,qBCvBxD,SAASS,EAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,cACxC,OACI,kBAACC,EAAA,EAAD,CAAM1C,UAAY,QACd,kBAAC0C,EAAA,EAAKC,IAAN,CAAU3C,UAAU,mBAChB,kBAAC0C,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACZ,kBAACJ,EAAA,EAAKK,MAAN,oBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,SAAUR,EACVS,MAAOV,EAAOd,YACdyB,KAAK,cACL/D,KAAK,UAGvB,kBAACsD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACZ,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,SAAUR,EACVS,MAAOV,EAAO7B,SACdwC,KAAK,WACL/D,KAAK,UAGvB,kBAACsD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKM,GAAG,OAAOC,SAAS,QACpC,kBAACX,EAAA,EAAKY,MAAN,CAAYL,SAAUR,EACVS,MAAOV,EAAOe,UACdJ,KAAK,YACLK,GAAG,YACHC,MAAM,iBACNrE,KAAK,WACLY,UAAU,YCM3B0D,MA7Bf,WAAgB,IAAD,EACgB9D,mBAAS,IADzB,mBACL4C,EADK,KACGmB,EADH,OAEY/D,mBAAS,GAFrB,mBAELgC,EAFK,KAECC,EAFD,OJoBA,SAAsBW,EAAQZ,GAAO,IAAD,EACrBgC,qBAAW3E,EAAS,CAACK,KAAM,GAAID,SAAS,IADnB,mBACxCH,EADwC,KACjC2E,EADiC,KAmC/C,OA/BAC,qBAAU,WACN,IAAMC,EAAeC,IAAMC,YAAYnD,SACvC+C,EAAS,CAACzE,KAAML,IAChBiF,IAAME,IAAIlF,EAAU,CAChBmF,YAAaJ,EAAaK,MAC1B5B,OAAO,aAAG6B,UAAU,EAAMzC,KAAMA,GAASY,KAC1C8B,MAAK,SAAAC,GACJV,EAAS,CAACzE,KAAML,EAAkBQ,QAAS,CAACD,KAAMiF,EAAIC,WACvDC,OAAM,SAAAC,GACDV,IAAMW,SAASD,IACnBb,EAAS,CAACzE,KAAML,EAAeQ,QAAS,CAACC,MAAOkF,QAGpD,IAAME,EAAeZ,IAAMC,YAAYnD,SAYvC,OAXAkD,IAAME,IAAIlF,EAAU,CAChBmF,YAAaS,EAAaR,MAC1B5B,OAAO,aAAG6B,UAAU,EAAMzC,KAAMA,EAAO,GAAMY,KAC9C8B,MAAK,SAAAC,GACJV,EAAS,CAACzE,KAAML,EACZQ,QAAS,CAACE,YAAiC,IAApB8E,EAAIC,KAAKK,aACrCJ,OAAM,SAAAC,GACDV,IAAMW,SAASD,IACnBb,EAAS,CAACzE,KAAML,EAAeQ,QAAS,CAACC,MAAOkF,QAG7C,WACHX,EAAae,SACbF,EAAaE,YAElB,CAACtC,EAAQZ,IAEL1C,EIpDqC6F,CAAavC,EAAQZ,GAA1DtC,EAHI,EAGJA,KAAMD,EAHF,EAGEA,QAASG,EAHX,EAGWA,MAAOC,EAHlB,EAGkBA,YAW7B,OACI,kBAACuF,EAAA,EAAD,CAAWhF,UAAU,QACjB,wBAAIA,UAAU,QAAd,eACA,kBAACuC,EAAD,CAAYC,OAAQA,EAAQC,cAZpC,SAA2BiC,GACvB,IAAMO,EAAQP,EAAEQ,OAAO/B,KACjBD,EAAQwB,EAAEQ,OAAOhC,MACvBrB,EAAQ,GACR8B,GAAU,SAAAwB,GACN,OAAO,2BAAIA,GAAX,kBAAwBF,EAAQ/B,UAQhC,kBAACvB,EAAD,CAAgBC,KAAMA,EAAMC,QAASA,EAASpC,YAAaA,IAC1DJ,GAAW,6CACXG,GAAS,qDACTF,EAAK8F,KAAI,SAAAzF,GACN,OAAO,kBAACD,EAAD,CAAK2F,IAAK1F,EAAI6D,GAAI7D,IAAKA,OAElC,kBAACgC,EAAD,CAAgBC,KAAMA,EAAMC,QAASA,EAASpC,YAAaA,MC3BvE6F,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0c0fd8e1.chunk.js","sourcesContent":["import {useReducer, useEffect} from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst ACTIONS = {\r\n    MAKE_REQUEST: 'make-request',\r\n    GET_DATA: 'get data',\r\n    ERROR: 'error',\r\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n}\r\n\r\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/' +\r\n    'https://jobs.github.com/positions.json';\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case ACTIONS.MAKE_REQUEST:\r\n            return {loading: true, jobs: []}\r\n        case ACTIONS.GET_DATA:\r\n            return {...state, loading: false, jobs: action.payload.jobs}\r\n        case ACTIONS.ERROR:\r\n            return {...state, loading: false, error: action.payload.error, jobs: []}\r\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n            return {...state, hasNextPage: action.payload.hasNextPage}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default function useFetchJobs(params, page) {\r\n    const [state, dispatch] = useReducer(reducer, {jobs: [], loading: true})\r\n\r\n\r\n    useEffect(() => {\r\n        const cancelToken1 = axios.CancelToken.source()\r\n        dispatch({type: ACTIONS.MAKE_REQUEST})\r\n        axios.get(BASE_URL, {\r\n            cancelToken: cancelToken1.token,\r\n            params: { markdown: true, page: page, ...params }\r\n        }).then(res => {\r\n            dispatch({type: ACTIONS.GET_DATA, payload: {jobs: res.data} })\r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return\r\n            dispatch({type: ACTIONS.ERROR, payload: {error: e} })\r\n        })\r\n\r\n        const cancelToken2 = axios.CancelToken.source()\r\n        axios.get(BASE_URL, {\r\n            cancelToken: cancelToken2.token,\r\n            params: { markdown: true, page: page + 1, ...params }\r\n        }).then(res => {\r\n            dispatch({type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\r\n                payload: {hasNextPage: res.data.length !== 0} })\r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return\r\n            dispatch({type: ACTIONS.ERROR, payload: {error: e} })\r\n        })\r\n\r\n        return () => {\r\n            cancelToken1.cancel()\r\n            cancelToken2.cancel()\r\n        }\r\n    }, [params, page])\r\n\r\n    return state\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {Badge, Button, Card, Collapse} from 'react-bootstrap'\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nexport default function Job({job}) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <Card className='mb-3'>\r\n            <Card.Body>\r\n                <div className='d-flex justify-content-between'>\r\n                    <div>\r\n                        <Card.Title>\r\n                            {job.title} - <span className='text-muted\r\n                            font-weight-light'>{job.company}</span>\r\n                        </Card.Title>\r\n                        <Card.Subtitle className='text-muted mb-2'>\r\n                            {new Date(job.created_at).toLocaleDateString()}\r\n                        </Card.Subtitle>\r\n                        <Badge variant='secondary' className='mr-2'>{job.type}</Badge>\r\n                        <Badge variant='secondary'>{job.location}</Badge>\r\n                        <div style={{wordBreak: 'break-all'}}>\r\n                            <ReactMarkdown source={job.how_to_apply}/>\r\n                        </div>\r\n                    </div>\r\n                    <img className='d-none d-md-block' height='50'\r\n                         alt={job.company} src={job.company_logo}/>\r\n                </div>\r\n                <Card.Text>\r\n                    <Button variant='primary'\r\n                            onClick={() => setOpen(prevOpen => !prevOpen)}\r\n                            >{open ? 'Hide Details' : 'View Details'}\r\n                    </Button>\r\n                </Card.Text>\r\n                <Collapse in={open}>\r\n                    <div className='mt-4'>\r\n                        <ReactMarkdown source={job.description}/>\r\n                    </div>\r\n                </Collapse>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}","import React from \"react\";\r\nimport {Pagination} from \"react-bootstrap\";\r\n\r\nexport default function JobsPagination({page, setPage, hasNextPage}) {\r\n    function adjustPage(amount) {\r\n        setPage(prevPage => prevPage + amount)\r\n    }\r\n    return (\r\n        <Pagination>\r\n            {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)}/>}\r\n\r\n            {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>\r\n                1\r\n            </Pagination.Item>}\r\n\r\n            {page > 2 && <Pagination.Ellipsis/>}\r\n\r\n            {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>\r\n                {page - 1}\r\n            </Pagination.Item>}\r\n\r\n            <Pagination.Item active>{page}</Pagination.Item>\r\n\r\n            {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>\r\n                {page + 1}\r\n            </Pagination.Item>}\r\n\r\n            {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)}/>}\r\n        </Pagination>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {Form, Col} from \"react-bootstrap\";\r\n\r\n\r\nexport default function SearchForm({params, onParamChange}) {\r\n    return (\r\n        <Form className = \"mb-4\">\r\n            <Form.Row className=\"align-items-end\">\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control onChange={onParamChange}\r\n                                  value={params.description}\r\n                                  name=\"description\"\r\n                                  type=\"text\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control onChange={onParamChange}\r\n                                  value={params.location}\r\n                                  name=\"location\"\r\n                                  type=\"text\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group as={Col} xs=\"auto\" classNae=\"ml-2\">\r\n                    <Form.Check onChange={onParamChange}\r\n                                value={params.full_time}\r\n                                name=\"full_time\"\r\n                                id=\"full_time\"\r\n                                label=\"Only Full Time\"\r\n                                type='checkbox'\r\n                                className=\"mb-2\"\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport useFetchJobs from \"./useFetchJobs\";\nimport {Container} from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport JobsPagination from \"./JobsPagination\";\nimport SearchForm from \"./SearchForm\";\n\nfunction App() {\n    const[params, setParams] = useState({})\n    const[page, setPage] = useState(1)\n    const {jobs, loading, error, hasNextPage} = useFetchJobs(params, page)\n\n    function handleParamChange(e) {\n        const param = e.target.name\n        const value = e.target.value\n        setPage(1)\n        setParams(prevParams => {\n            return {...prevParams, [param]: value}\n        })\n    }\n\n    return (\n        <Container className='my-4'>\n            <h1 className='mb-4'>GitHub Jobs</h1>\n            <SearchForm params={params} onParamChange={handleParamChange}/>\n            <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n            {loading && <h1>Loading . . .</h1>}\n            {error && <h1>Error. Try refreshing</h1>}\n            {jobs.map(job => {\n                return <Job key={job.id} job={job} />\n            })}\n            <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}